<?xml version="1.0" encoding="UTF-8"?>
<testng-results total="7" passed="3" failed="0" skipped="4">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-07-29T16:48:30Z" name="Default suite" finished-at="2023-07-29T16:48:30Z" duration-ms="45">
    <groups>
    </groups>
    <test started-at="2023-07-29T16:48:30Z" name="Default test" finished-at="2023-07-29T16:48:30Z" duration-ms="45">
      <class name="com.SmokeTest">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:com.SmokeTest@6a8658ff]" started-at="2023-07-29T12:48:30Z" name="beforeSuite" finished-at="2023-07-29T12:48:30Z" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:com.SmokeTest@6a8658ff]" started-at="2023-07-29T12:48:30Z" name="beforeTest" finished-at="2023-07-29T12:48:30Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.SmokeTest@6a8658ff]" started-at="2023-07-29T12:48:30Z" name="beforeClass" finished-at="2023-07-29T12:48:30Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="f(java.lang.Integer, java.lang.String)[pri:0, instance:com.SmokeTest@6a8658ff]" started-at="2023-07-29T12:48:30Z" name="f" data-provider="dp" finished-at="2023-07-29T12:48:30Z" duration-ms="0" status="SKIP">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Method public void com.BaseTest.f(java.lang.Integer,java.lang.String) requires a @DataProvider named : dp]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Method public void com.BaseTest.f(java.lang.Integer,java.lang.String) requires a @DataProvider named : dp
	at org.testng.internal.Parameters.findDataProvider(Parameters.java:263)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:419)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1274)
	at org.testng.internal.Invoker.createParameters(Invoker.java:989)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1079)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method signature="test1()[pri:0, instance:com.SmokeTest@6a8658ff]" started-at="2023-07-29T12:48:30Z" name="test1" finished-at="2023-07-29T12:48:30Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.SmokeTest@6a8658ff]" started-at="2023-07-29T12:48:30Z" name="beforeMethod" finished-at="2023-07-29T12:48:30Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.SmokeTest@6a8658ff]" started-at="2023-07-29T12:48:30Z" name="afterMethod" finished-at="2023-07-29T12:48:30Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.SmokeTest@6a8658ff]" started-at="2023-07-29T12:48:30Z" name="afterClass" finished-at="2023-07-29T12:48:30Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:com.SmokeTest@6a8658ff]" started-at="2023-07-29T12:48:30Z" name="afterTest" finished-at="2023-07-29T12:48:30Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:com.SmokeTest@6a8658ff]" started-at="2023-07-29T12:48:31Z" name="afterSuite" finished-at="2023-07-29T12:48:31Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- com.SmokeTest -->
      <class name="com.RegressionTest">
        <test-method signature="f(java.lang.Integer, java.lang.String)[pri:0, instance:com.RegressionTest@1c742ed4]" started-at="2023-07-29T12:48:30Z" name="f" data-provider="dp" finished-at="2023-07-29T12:48:30Z" duration-ms="0" status="SKIP">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Method public void com.BaseTest.f(java.lang.Integer,java.lang.String) requires a @DataProvider named : dp]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Method public void com.BaseTest.f(java.lang.Integer,java.lang.String) requires a @DataProvider named : dp
	at org.testng.internal.Parameters.findDataProvider(Parameters.java:263)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:419)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1274)
	at org.testng.internal.Invoker.createParameters(Invoker.java:989)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1079)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.RegressionTest@1c742ed4]" started-at="2023-07-29T12:48:30Z" name="beforeClass" finished-at="2023-07-29T12:48:30Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="test2()[pri:0, instance:com.RegressionTest@1c742ed4]" started-at="2023-07-29T12:48:30Z" name="test2" finished-at="2023-07-29T12:48:30Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.RegressionTest@1c742ed4]" started-at="2023-07-29T12:48:30Z" name="beforeMethod" finished-at="2023-07-29T12:48:30Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.RegressionTest@1c742ed4]" started-at="2023-07-29T12:48:30Z" name="afterMethod" finished-at="2023-07-29T12:48:30Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="test3()[pri:0, instance:com.RegressionTest@1c742ed4]" started-at="2023-07-29T12:48:30Z" name="test3" finished-at="2023-07-29T12:48:30Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.RegressionTest@1c742ed4]" started-at="2023-07-29T12:48:30Z" name="beforeMethod" finished-at="2023-07-29T12:48:30Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.RegressionTest@1c742ed4]" started-at="2023-07-29T12:48:30Z" name="afterMethod" finished-at="2023-07-29T12:48:30Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.RegressionTest@1c742ed4]" started-at="2023-07-29T12:48:30Z" name="afterClass" finished-at="2023-07-29T12:48:30Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.RegressionTest -->
      <class name="com.DbTest">
        <test-method signature="f(java.lang.Integer, java.lang.String)[pri:0, instance:com.DbTest@333d4a8c]" started-at="2023-07-29T12:48:30Z" name="f" data-provider="dp" finished-at="2023-07-29T12:48:30Z" duration-ms="0" status="SKIP">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Method public void com.DbTest.f(java.lang.Integer,java.lang.String) requires a @DataProvider named : dp]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Method public void com.DbTest.f(java.lang.Integer,java.lang.String) requires a @DataProvider named : dp
	at org.testng.internal.Parameters.findDataProvider(Parameters.java:263)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:419)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1274)
	at org.testng.internal.Invoker.createParameters(Invoker.java:989)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1079)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
      </class> <!-- com.DbTest -->
      <class name="com.BaseTest">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.BaseTest@55de24cc]" started-at="2023-07-29T12:48:30Z" name="beforeClass" finished-at="2023-07-29T12:48:30Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="f(java.lang.Integer, java.lang.String)[pri:0, instance:com.BaseTest@55de24cc]" started-at="2023-07-29T12:48:30Z" name="f" data-provider="dp" finished-at="2023-07-29T12:48:30Z" duration-ms="0" status="SKIP">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Method public void com.BaseTest.f(java.lang.Integer,java.lang.String) requires a @DataProvider named : dp]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Method public void com.BaseTest.f(java.lang.Integer,java.lang.String) requires a @DataProvider named : dp
	at org.testng.internal.Parameters.findDataProvider(Parameters.java:263)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:419)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1274)
	at org.testng.internal.Invoker.createParameters(Invoker.java:989)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1079)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.BaseTest@55de24cc]" started-at="2023-07-29T12:48:30Z" name="afterClass" finished-at="2023-07-29T12:48:30Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.BaseTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
